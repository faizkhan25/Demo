register.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Register</title>
</head>
<body>
<h1>Register</h1>
<form action="register" method="post">
Name:<input type="text" name="name" required><br><br>
Email:<input type="email" name="email" required><br><br>
Course:<input type="text" name="course" required><br><br>
<input type="submit" value="submit">

</form>

<a href="/view">View Data</a>
<a href="/login"><button>Login</button></a>

</body>
</html>

login.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Login</title>
</head>
<body>
<h1>Login</h1>

<form action="login" method="post">
    Email: <input type="email" name="email" required><br><br>
    Name: <input type="text" name="name" required><br><br>
    <input type="submit" value="Login">
</form>

<!-- Show error message if login fails -->
<c:if test="${not empty error}">
    <p style="color:red;">${error}</p>
</c:if>

<!-- Show success message if login succeeds -->
<c:if test="${not empty message}">
    <p style="color:green;">${message}</p>
</c:if>

<br>
<a href="/">Back to Register</a>
</body>
</html>

view.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
    <%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

<h1>Registered Data</h1>

<table border="1">
<tr>
	<th>Id</th>
	<th>Name</th>
	<th>Email</th>
	<th>Course</th>
</tr>

<c:forEach var="s" items="${data}">

<tr>
	<td>${s.id}</td>
	<td>${s.name}</td>
	<td>${s.email}</td>
	<td>${s.course}</td>
</tr>

</c:forEach>


</table>

</body>
</html>

RegisterMain
package com.example.register;

public class RegisterMain {
	
	private int id;
	private String name;
	private String email;
	private String course;
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	public String getCourse() {
		return course;
	}
	public void setCourse(String course) {
		this.course = course;
	}
	

}


LoginMain
package com.example.register;

public class LoginMain {
    private String email;
    private String name;

    // Constructors
    public LoginMain() {}

    public LoginMain(String email, String name) {
        this.email = email;
        this.name = name;
    }

    // Getters and Setters
    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}

RegisterDAO
package com.example.register;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

@Repository
public class RegisterDAO {
	@Autowired
	DataSource datasource;
	public void save(RegisterMain main) throws SQLException {
		String query = "insert into student(name,email,course) value(?,?,?)";
		Connection con = datasource.getConnection();
		PreparedStatement ps = con.prepareStatement(query);
		ps.setString(1, main.getName());
		ps.setString(2, main.getEmail());
		ps.setString(3, main.getCourse());
		
		ps.executeUpdate();
		
	}
	
	public List<RegisterMain> show() throws SQLException{
		ArrayList<RegisterMain> list = new ArrayList<>();
		String query = "select * from student";
		Connection con = datasource.getConnection();
		PreparedStatement ps = con.prepareStatement(query);
		ResultSet rs = ps.executeQuery();
		while(rs.next()) {
			RegisterMain m = new RegisterMain();
			m.setId(rs.getInt("id"));
			m.setName(rs.getString("name"));
			m.setEmail(rs.getString("email"));
			m.setCourse(rs.getString("course"));
			list.add(m);
		}
		return list;	
	}
}

LoginDAO
package com.example.register;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

@Repository
public class LoginDAO {

    @Autowired
    private DataSource dataSource;

    public boolean validateLogin(String email, String name) {
        String query = "SELECT * FROM student WHERE email=? AND name=?";
        try (
            Connection con = dataSource.getConnection();
            PreparedStatement ps = con.prepareStatement(query)
        ) {
            ps.setString(1, email);
            ps.setString(2, name);
            ResultSet rs = ps.executeQuery();
            return rs.next(); // returns true if a match is found
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }
}

RegisterController
package com.example.register;

import java.sql.SQLException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;

@Controller
public class RegisterController {
	
	@Autowired
	private RegisterDAO registerDAO;
	
	@GetMapping("/")
	public String register(Model model) {
		model.addAttribute("user", new RegisterMain());
		return "register";
	}
	
	@PostMapping("/register")
	public String showData(@ModelAttribute("user") RegisterMain main,Model model) throws SQLException {
		registerDAO.save(main);
		return "redirect:/";	
	}


	@GetMapping("/view")
	public String viewData(Model model) throws SQLException {
		List<RegisterMain> list = registerDAO.show();
		model.addAttribute("data", list);
		return "view";	
	}
	
	@Autowired
	private LoginDAO loginDAO;

	@GetMapping("/login")
	public String loginPage(Model model) {
	    model.addAttribute("loginForm", new LoginMain());
	    return "login";
	}

	@PostMapping("/login")
	public String doLogin(@ModelAttribute("loginForm") LoginMain loginForm, Model model) {
	    boolean isValid = loginDAO.validateLogin(loginForm.getEmail(), loginForm.getName());
	    if (isValid) {
	        model.addAttribute("message", "Login successful!");
	    } else {
	        model.addAttribute("error", "Invalid email or name.");
	    }
	    return "login";
	}


}

application.properties
spring.application.name=RegisterBoot-1

spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/dac1
spring.datasource.username=root
spring.datasource.password=Faiz@123#
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.17</version>
		<relativePath/> <!-- ookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>RegisterBoot-1</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>RegisterBoot-1</name>
	<description>Demo project for Spring Boot</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>21</java.version>
	</properties>
	<dependencies>
		 <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
			<scope>runtime</scope>
		</dependency>
			<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		
		
	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web-services</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		

		
	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		 <!-- JSP Support -->
    <dependency>
        <groupId>org.apache.tomcat.embed</groupId>
        <artifactId>tomcat-embed-jasper</artifactId>
    </dependency>

    <!-- JSTL -->
    <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>jstl</artifactId>
    </dependency>
</dependencies>



	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>


